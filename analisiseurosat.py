# -*- coding: utf-8 -*-
"""Copia de AnalisisEurosat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DNfpfNZb7YCtyQ-qggawHEZsAhBZ-Aag
"""

!pip install datasets --quiet

# Importar y verificar la versión "datasets"
import datasets
print(datasets.__version__) # Mostrar la versión instalada

from datasets import load_dataset
import numpy as np
import cv2
import matplotlib.pyplot as plt

EuroSAT_RGB = load_dataset("blanchon/EuroSAT_RGB")

print(EuroSAT_RGB)

# Seleccionar una imagen del dataset
img_data = EuroSAT_RGB['train'][25]['image']

# Convertir a numpy array
img_np = np.array(img_data)

plt.imshow(img_np)
plt.title("Ejemplo de imagen EuroSAT")
plt.show()

img_np.shape

# Aplicar transformaciones
img_flipX = cv2.flip(img_np, 0)
img_flipY = cv2.flip(img_np, 1)
img_flipXY = cv2.flip(img_np, -1)

# Imágenes: original y transformada
plt.figure(figsize = (10, 8))
plt.suptitle("Transformaciones en imágenes Satelitales (EuroSAT)", fontsize = 14)

plt.subplot(2,2,1)
plt.imshow(img_np)
plt.title("Imagen Original")

plt.subplot(2,2,2)
plt.imshow(img_flipX)
plt.title("Flipped along x-axis")

plt.subplot(2,2,3)
plt.imshow(img_flipY)
plt.title("Flipped along y-axis")

plt.subplot(2,2,4)
plt.imshow(img_flipXY)
plt.title("Flipped along xy-axis")
plt.show()

img_data = EuroSAT_RGB['train'][15000]['image'] # Seleccionar la imagen "255" de la bd
img_np = np.array(img_data) # Convertir la imagen en un array NumPy para su debido procesamiento

plt.imshow(img_np)
plt.title("Ejemplo de imagen EuroSAT")
plt.show()

# Convertir la imagen a escala de grises
gray_img = cv2.cvtColor(img_np, cv2.COLOR_RGB2GRAY)
plt.imshow(gray_img, cmap = 'gray')
plt.title("Ejemplo de imagen EuroSAT")
plt.show()

# Calcula el histograma de la imagen en escala de grises
hist_gray = cv2.calcHist([gray_img], [0], None, [256], [0, 256])

# Calcula los histogramas para los canales de color (RGB)
hist_r = cv2.calcHist([img_np], [0], None, [256], [0, 256])
hist_g = cv2.calcHist([img_np], [1], None, [256], [0, 256])
hist_b = cv2.calcHist([img_np], [2], None, [256], [0, 256])

# Visualización de los histogramas

fig, axes = plt.subplots(1, 3, figsize = (20, 5))
axes[0].imshow(img_np)
axes[0].set_title("Imagen Original")
axes[0].axis('off')

axes[1].plot(hist_gray, color = 'black')
axes[1].set_title("Histograma (Grises)")

axes[2].plot(hist_r, color = 'red', label = 'Canal Rojo')
axes[2].plot(hist_g, color = 'green', label = 'Canal Verde')
axes[2].plot(hist_b, color = 'blue', label = 'Canal Azul')
axes[2].legend()
axes[2].set_title("Histograma RGB")

plt.tight_layout()
plt.show()